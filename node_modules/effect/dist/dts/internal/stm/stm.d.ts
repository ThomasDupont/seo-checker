import type * as STM from "../../STM.js";
import type { MergeRecord } from "../../Types.js";
export declare const bind: (<N extends string, K, A, E2, R2>(tag: Exclude<N, keyof K>, f: (_: K) => STM.STM<A, E2, R2>) => <E, R>(self: STM.STM<K, E, R>) => STM.STM<MergeRecord<K, { [k in N]: A; }>, E2 | E, R2 | R>) & (<K_1, E_1, R_1, N_1 extends string, A_1, E2_1, R2_1>(self: STM.STM<K_1, E_1, R_1>, tag: Exclude<N_1, keyof K_1>, f: (_: K_1) => STM.STM<A_1, E2_1, R2_1>) => STM.STM<MergeRecord<K_1, { [k_1 in N_1]: A_1; }>, E_1 | E2_1, R_1 | R2_1>);
export { 
/** @internal */
void_ as void };
//# sourceMappingURL=stm.d.ts.map