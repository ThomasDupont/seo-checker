"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromDequeue = exports.failCause = exports.fail = exports.end = exports.empty = exports.emitChunk = exports.emit = void 0;
var Chunk = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("../../Chunk.js"));
var Effect = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("../../Effect.js"));
var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("../../Option.js"));
var Queue = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("../../Queue.js"));
var take = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("../take.js"));
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function (e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != typeof e && "function" != typeof e) return {
    default: e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n.default = e, t && t.set(e, n), n;
}
/** @internal */
const emit = value => Effect.succeed(Chunk.of(value));
/** @internal */
exports.emit = emit;
const emitChunk = chunk => Effect.succeed(chunk);
/** @internal */
exports.emitChunk = emitChunk;
const empty = () => Effect.succeed(Chunk.empty());
/** @internal */
exports.empty = empty;
const end = () => Effect.fail(Option.none());
/** @internal */
exports.end = end;
const fail = error => Effect.fail(Option.some(error));
/** @internal */
exports.fail = fail;
const failCause = cause => Effect.mapError(Effect.failCause(cause), Option.some);
/** @internal */
exports.failCause = failCause;
const fromDequeue = dequeue => Effect.flatMap(Queue.take(dequeue), take.done);
exports.fromDequeue = fromDequeue;
//# sourceMappingURL=pull.js.map